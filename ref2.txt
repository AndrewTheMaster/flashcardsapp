
		УТВЕРЖДЕНО
	
		А.В.00001-01 ТЗ 01-ЛУ















РАЗРАБОТКА МОБИЛЬНОГО ПРИЛОЖЕНИЯ ДЛЯ ИЗУЧЕНИЯ КИТАЙСКОГО ЯЗЫКА С ИСПОЛЬЗОВАНИЕМ ИИ

 Техническое задание

А.В.00001-01 ТЗ 01

АННОТАЦИЯ



В данном программном документе приведено техническое задание на разработку программы для изучения китайского языка с помощью карточек с использованием ии.
	В данном программном документе, в разделе «Введение» указано наименование, краткая характеристика области применения программы (программного изделия).  
В разделе «Основания для разработки» указаны документы, на основании которых ведется разработка, наименование и условное обозначение темы разработки.  
	В данном программном документе, в разделе «Назначение разработки» указано функциональное и эксплуатационное назначение программы (программного изделия).
	Раздел «Требования к программе» содержит следующие подразделы: 
требования к функциональным характеристикам; 
требования к надежности; 
условия эксплуатации; 
требования к составу и параметрам технических средств; 
требования к информационной и программной совместимости;  
специальные требования.
В данном программном документе, в разделе «Требования к программной документации» указаны предварительный состав программной документации и специальные требования к ней.
В разделе «Технико-экономические показатели» указаны: ориентировочная экономическая эффективность, предполагаемая годовая потребность, экономические преимущества разработки.
В данном программном документе, в разделе «Стадии и этапы разработки» установлены необходимые стадии разработки, этапы и содержание работ.
В разделе «Порядок контроля и приемки» должны быть указаны виды испытаний и общие требования к приемке работы. 
Оформление программного документа «Руководство оператора» произведено по требованиям ЕСПД (ГОСТ 19.101-77 1), ГОСТ 19.103-77 2), ГОСТ 19.104-78* 3), ГОСТ 19.105-78* 4), ГОСТ 19.106-78* 5), ГОСТ 19.201-78 6), ГОСТ 19.604-78* 7)).
СОДЕРЖАНИЕ



АННОТАЦИЯ	2
СОДЕРЖАНИЕ	2
1. ВВЕДЕНИЕ	4
1.1. Наименование программы	5
1.2. Краткая характеристика области применения программы	5
2. ОСНОВАНИЕ ДЛЯ РАЗРАБОТКИ	6
2.1. Основание для проведения разработки	6
2.2. Наименование и условное обозначение темы разработки	6
3. НАЗНАЧЕНИЕ РАЗРАБОТКИ	6
3.1. Функциональное назначение программы	6
3.2. Эксплуатационное назначение программы	7
4. ТРЕБОВАНИЯ К ПРОГРАММЕ	8
4.1. Требования к функциональным характеристикам	8
4.1.1. Требования к составу выполняемых функций	8
4.1.2. Требования к организации входных данных	9
4.1.3. Требования к организации выходных данных	9
4.1.4. Требования к временным характеристикам	10
4.1.5. Требования к взаимодействию клиентской и серверной частей	10
4.1.6. Требования к клиентской части	10
4.2. Требования к надежности	11
4.2.1. Требования к обеспечению надежного (устойчивого) функционирования программы	11
4.2.2. Время восстановления после отказа	11
4.2.3. Контроль входной и выходной информации	12
4.3. Условия эксплуатации	12
4.3.1. Климатические условия эксплуатации	12
4.3.2. Требования к видам обслуживания	12
4.3.3. Требования к численности и квалификации персонала	12
4.4. Требования к составу и параметрам технических средств	13
4.5. Требования к информационной и программной совместимости	13
4.5.1. Требования к информационным структурам и методам решения	13
4.5.2. Требования к исходным кодам и языкам программирования	13
4.5.3. Требования к программным средствам, используемым программой	14
5. ТРЕБОВАНИЯ К ПРОГРАММНОЙ ДОКУМЕНТАЦИИ	14
6. ТЕХНИКО-ЭКОНОМИЧЕСКИЕ ПОКАЗАТЕЛИ	15
6.1. Ориентировочная экономическая эффективность	15
6.2. Предполагаемая годовая потребность	15
6.3. Экономические преимущества разработки	15
7. СТАДИИ И ЭТАПЫ РАЗРАБОТКИ	16
7.1. Стадии разработки	16
7.2. Этапы разработки	16
7.3. Содержание работ по этапам	17
7.4. Исполнитель	18
8. ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ	18
8.1. Виды испытаний	18
8.2. Общие требования к приемке работы	18

ВВЕДЕНИЕ




Наименование программы



Наименование - «Разработка мобильного приложения для изучения китайского языка с использованием технологий искусственного интеллекта»




Краткая характеристика области применения программы

Разрабатываемое мобильное приложение предназначено для пользователей, заинтересованных в изучении китайского языка с использованием технологий искусственного интеллекта. Программа предоставляет инструменты для самостоятельного создания и изучения карточек и наборов карточек, а также выполнения упражнений на основе созданного пользователем контента. Приложение будет доступно для установки на мобильные устройства с операционными системами iOS и Android, что обеспечивает удобство использования в любое время и в любом месте.
Пользователь может самостоятельно создавать карточки и формировать из них наборы для изучения, что позволяет адаптировать процесс обучения под индивидуальные потребности. Искусственный интеллект используется для разнообразия пользовательского опыта путем генерации дополнительного контента, такого как примеры использования слов, контекстные задания и вариации упражнений. Это помогает сделать процесс обучения более увлекательным и эффективным, а также поддерживает интерес пользователя к изучению языка.
Программный продукт ориентирован на широкий круг пользователей: от начинающих, только приступающих к изучению китайского языка, до продвинутых учеников, желающих углубить свои знания. Приложение также может быть полезно для преподавателей, которые смогут использовать его в качестве дополнительного инструмента для создания учебных материалов. Его применение позволит сделать процесс изучения языка более гибким, персонализированным и интерактивным, способствуя эффективному запоминанию и применению знаний.





ОСНОВАНИЕ ДЛЯ РАЗРАБОТКИ




Основание для проведения разработки



Основанием для проведения разработки является задание на лабораторную работу №1 по дисциплине ПиАПС от 15 февраля 2025 года. 


Наименование и условное обозначение темы разработки


Наименование темы разработки - «Разработка мобильного приложения для изучения китайского языка с использованием технологий искусственного интеллекта

Условное обозначение темы разработки (шифр темы) - «А.В.00001».




НАЗНАЧЕНИЕ РАЗРАБОТКИ




Функциональное назначение программы




. Программа позволяет создавать и изучать карточки, выполнять упражнения на основе пользовательского контента, а также автоматически генерировать дополнительные материалы для разнообразия процесса обучения.
Основные функции программы:
Создание и редактирование карточек и наборов карточек для изучения китайского языка.
Выполнение интерактивных упражнений на основе созданных пользователем карточек.
Генерация дополнительного контента (примеры использования слов, контекстные задания, вариации упражнений) с использованием искусственного интеллекта.
Анализ прогресса пользователя и предоставление рекомендаций для улучшения результатов обучения.
Удобный интерфейс для управления карточками, наборами и упражнениями.
Использование данного приложения позволит сделать процесс изучения китайского языка более гибким, персонализированным и увлекательным, а также повысить эффективность запоминания и применения знаний.




Эксплуатационное назначение программы


Программа предназначена для эксплуатации пользователями, заинтересованными в изучении китайского языка, и служит вспомогательным инструментом для тех, кто использует официальные учебники Китая или другие образовательные материалы. Приложение дополняет традиционные методы обучения, предлагая интерактивные карточки, игры и упражнения с использованием технологий искусственного интеллекта (ИИ).
Конечные пользователи программы:
Начинающие:
Пользователи, которые только приступают к изучению китайского языка.
Используют приложение как дополнение к учебникам для закрепления базовых знаний (иероглифы, слова, фразы).
Нуждаются в простых и понятных упражнениях, которые помогают лучше усвоить материал.
Продвинутые ученики:
Пользователи, желающие углубить свои знания и улучшить навыки.
Используют приложение для изучения специализированной лексики, сложных иероглифов и грамматических конструкций.
Ценят возможность создавать собственные наборы карточек и выполнять продвинутые упражнения.
Преподаватели:
Используют приложение для создания дополнительных учебных материалов и заданий для своих студентов.
Могут разрабатывать индивидуальные наборы карточек и упражнения, адаптированные под учебные программы.
Используют игры и интерактивные задания для повышения мотивации студентов.
Самостоятельные ученики:
Люди, изучающие язык самостоятельно, которые хотят иметь гибкий и адаптивный инструмент для обучения.
Используют приложение для повторения материала, создания персонализированных карточек и выполнения упражнений с ИИ.





ТРЕБОВАНИЯ К ПРОГРАММЕ


Требования к функциональным характеристикам


Требования к составу выполняемых функций

Программа должна обеспечивать возможность выполнения перечисленных ниже функций:
Создание и управление карточками:
а) Ввод пользователем текста, перевода и примеров использования для создания карточек.
б) Возможность редактирования и удаления карточек.
Формирование наборов карточек:
а) Группировка карточек в наборы по темам, уровням сложности или другим критериям.
б) Возможность редактирования и удаления наборов.
Выполнение упражнений:
а) Предоставление интерактивных упражнений на основе созданных карточек (например, тесты на перевод, запоминание иероглифов).
б) Генерация дополнительных заданий с использованием искусственного интеллекта для разнообразия обучения.
Анализ прогресса:
а) Отслеживание успехов пользователя в изучении карточек и выполнении упражнений.
б) Формирование рекомендаций для улучшения результатов (например, повторение сложных слов или иероглифов).
Генерация контента:
а) Автоматическое создание примеров использования слов, контекстных заданий и вариаций упражнений.
б) Поддержка пользователя в создании новых карточек на основе анализа его прогресса.
Экспорт и импорт данных:
а) Возможность выгрузки наборов карточек в удобных форматах (например, .txt, .csv).
б) Загрузка готовых наборов карточек для использования в приложении.

Программа должна обеспечивать удобный и схожий с прочими приложенями для изучения языков через карточки, позволяя пользователям легко создавать карточки, формировать наборы и выполнять упражнения.





Требования к организации входных данных



Входные данные программы должны быть организованы в виде форм (полей) в мобильном приложении.
Типы входных данных:
а) Текст для карточек (слова, иероглифы, перевод, примеры использования).
б) Метаданные для наборов карточек (название, описание, теги).
в) Параметры для упражнений (уровень сложности, количество карточек).
Обработка данных:
а) Входные данные должны обрабатываться в режиме реального времени и сохраняться в локальной базе данных устройства.
Проверка данных:
а) Проверка корректности введенных данных (например, исключение пустых полей, ограничение на количество символов).
б) Уведомление пользователя об ошибках при вводе некорректных данных.



Требования к организации выходных данных



Выходные данные программы должны быть организованы в виде интерфейса мобильного приложения, где пользователю отображаются результаты выполнения упражнений, прогресс обучения и рекомендации.
Форматы выходных данных:
а) Результаты упражнений (например, процент правильных ответов, список ошибок).
б) Рекомендации по улучшению навыков (например, повторение сложных карточек).
в) Возможность экспорта наборов карточек в форматах .txt или .csv.
Хранение данных:
а) Выходные данные должны храниться в локальной базе данных устройства.




Требования к временным характеристикам


Загрузка интерфейса приложения не должна превышать 3 секунд.
Генерация упражнений и рекомендаций должна выполняться не более чем за 5 секунд.
Экспорт и импорт наборов карточек должны занимать не более 10 секунд.



Требования к взаимодействию клиентской и серверной частей


Взаимодействие между клиентской и серверной частями должно осуществляться посредством HTTP-запросов.
Все запросы и ответы должны передаваться в формате JSON.
Для долгих операций (например, синхронизация данных) сервер должен поддерживать асинхронную обработку запросов.
В случае ошибки сервер должен отправить клиенту сообщение с кодом ошибки и описанием проблемы.





Требования к клиентской части


Клиентская часть должна быть реализована в виде мобильного приложения для iOS и Android.
Интерфейс должен быть схожим с интерфейсом конкурентов, для облегчения перехода пользователей с других платформ обучения.
Приложение должно поддерживать офлайн-режим с возможностью локального хранения данных.




Требования к надежности




Требования к обеспечению надежного (устойчивого) функционирования программы


Взаимодействие между клиентской и серверной частями:
а) Взаимодействие должно осуществляться посредством HTTP-запросов.
б) Все запросы и ответы должны передаваться в формате JSON для обеспечения совместимости и удобства обработки данных.
Основные требования к взаимодействию:
а) Клиентская часть должна отправлять запросы на сервер для получения данных, генерации контента и синхронизации информации.
б) Сервер должен обрабатывать запросы и отправлять ответы в формате JSON.
в) Для долгих операций (например, синхронизация данных или генерация контента) сервер должен поддерживать асинхронную обработку запросов, уведомляя пользователя о статусе выполнения.
г) В случае ошибки сервер должен отправить клиенту сообщение с кодом ошибки и описанием проблемы.






Время восстановления после отказа



Отказы, вызванные внешними факторами:
а) Время восстановления после отказа, вызванного сбоем электропитания или другими внешними факторами (не фатальный сбой операционной системы), не должно превышать времени, необходимого для перезагрузки операционной системы и запуска программы.
б) Условия эксплуатации технических и программных средств должны соблюдаться.
Отказы, вызванные неисправностью технических средств:
а) Время восстановления после отказа, вызванного неисправностью технических средств или фатальным сбоем (крахом) операционной системы, не должно превышать времени, необходимого для устранения неисправностей и переустановки программных средств.




Контроль входной и выходной информации


Контроль входной информации:
а) Все формы должны иметь ограничения на количество символов:
Названия и описания – не более 500 символов.
Текстовые поля – только текст, без специальных символов.
б) Проверка корректности введенных данных:
Числовые значения для параметров (например, количество карточек).
Исключение пустых полей.
в) Допустимые форматы для загрузки файлов (например, .txt, .csv) с максимальным размером 5 МБ.
Контроль выходной информации:
а) Результаты упражнений, рекомендации и данные должны отображаться в понятном и структурированном виде.
б) Возможность экспорта наборов карточек в форматах .txt или .csv.
в) Ответы от сервера в формате JSON должны содержать все необходимые данные и описание ошибок в случае проблем.




Условия эксплуатации

Климатические условия эксплуатации


Климатические условия эксплуатации не предъявляются.


Требования к видам обслуживания


См. Требования к обеспечению надежного (устойчивого) функционирования программы.


Требования к численности и квалификации персонала


Минимальное количество персонала, требуемого для работы программы, должно составлять не менее 1 штатных единиц - системный программист.
Системный программист должен иметь высшее техническое образование или быть студентом четвертого курса технического направления.

В перечень задач, выполняемых системным программистом, должны входить:

а)	задача поддержания работоспособности программных средств;

б)	задачи установки (инсталляции) и поддержания работоспособности системных программных средств - операционной системы;

в)	задача установки (инсталляции) программы.



Требования к составу и параметрам технических средств


	 	 	 	
 Для запуска мобильного приложения: Android 8.0 (API 26) и выше, iOS 12 и выше.




Требования к информационной и программной совместимости


Требования к информационным структурам и методам решения


Требования к информационным структурам на входе и выходе, а также к методам решения не предъявляются.



Требования к исходным кодам и языкам программирования


Мобильное приложение:
а) Язык программирования: Dart.
б) Фреймворк: Flutter для разработки кроссплатформенного мобильного приложения.
в) Среда разработки: Android Studio с поддержкой Flutter SDK.
г) Технологии: Использование готовых библиотек и пакетов из pub.dev для ускорения разработки.
Дополнительные инструменты:
а) Система контроля версий: Git (рекомендуется использование платформ GitHub или GitLab).
б) Контейнеризация: Docker (для упрощения развертывания серверной части, если она будет разработана).
в) Управление зависимостями: pub (для Dart/Flutter) и pip (для Python).
Требования к коду:
а) Исходный код должен быть хорошо документирован с использованием комментариев и README-файлов.
б) Код должен соответствовать принципам чистой архитектуры и SOLID для обеспечения масштабируемости и поддерживаемости.
в) Для Dart/Flutter рекомендуется следовать официальным рекомендациям по стилю кода от Google.
Тестирование:
а) Для клиентской части: Использование unit-тестов и widget-тестов в Flutter.
б) Для серверной части (если будет разработана): Использование pytest для модульного тестирования на Python.
Эти требования обеспечат качественную разработку мобильного приложения на Dart/Flutter и подготовят основу для возможного расширения функциональности с использованием серверной части в будущем.



Требования к программным средствам, используемым программой


 Для запуска мобильного приложения: Android 8.0 (API 26) и выше, iOS 12 и выше.





	 	 	 	
ТРЕБОВАНИЯ К ПРОГРАММНОЙ ДОКУМЕНТАЦИИ

	 	 	 	
Программная документация должна включать:
Техническое задание (данный документ);
Спецификацию
Программу 	и методику испытаний
Инструкции 	по установке и развертыванию.
Руководство 	пользователя.


ТЕХНИКО-ЭКОНОМИЧЕСКИЕ ПОКАЗАТЕЛИ


	
Ориентировочная экономическая эффективность



Ориентировочная экономическая эффективность не рассчитывается.



Предполагаемая годовая потребность


Предполагаемое число использования программы в год – круглосуточная доступность программы для всех пользователей.



Экономические преимущества разработки


Целевая аудитория:
а) Приложение ориентировано на пользователей, заинтересованных в изучении китайского языка, включая студентов, преподавателей и самостоятельных учеников.
б) Возможность масштабирования на другие языки в будущем.
Преимущества для пользователей:
а) Экономия времени за счет автоматизации создания карточек и генерации упражнений.
б) Снижение затрат на покупку учебных материалов, так как пользователи могут создавать собственные наборы карточек.
в) Удобство использования в любое время и в любом месте благодаря мобильной платформе.
Преимущества для разработчиков:
а) Низкие затраты на разработку благодаря использованию кроссплатформенного фреймворка Flutter.
б) Возможность монетизации через премиум-функции (например, расширенные возможности генерации контента или синхронизация данных между устройствами).
в) Минимальные затраты на поддержку и обновление приложения.
Рыночные перспективы:
а) Высокий спрос на образовательные приложения, особенно в условиях роста интереса к изучению китайского языка.
б) Возможность интеграции с другими образовательными платформами или сервисами для расширения функциональности.
Экономическая эффективность:
а) Снижение затрат на маркетинг за счет использования сарафанного радио и рекомендаций от пользователей.
б) Возможность привлечения инвестиций или грантов для образовательных проектов.




СТАДИИ И ЭТАПЫ РАЗРАБОТКИ




Стадии разработки



Разработка должна быть проведена в три стадии:

1)	разработка технического задания;

2)	рабочее проектирование;

3)	внедрение.




Этапы разработки



На стадии разработки технического задания должен быть выполнен этап разработки, согласования и утверждения настоящего технического задания.

На стадии рабочего проектирования должны быть выполнены перечисленные ниже этапы работ:

1)	разработка программной документации;
2)	разработка программы;
3)	испытания программы;
4) 	подготовка и передача программы.

На стадии внедрения должен быть выполнен этап разработки - подготовка и развертывание программы на сервере.



Содержание работ по этапам



На этапе разработки технического задания должны быть выполнены перечисленные ниже работы:

1)	постановка задачи;
2)	определение и уточнение требований к техническим средствам;
3)	определение требований к программе;
4)	определение стадий, этапов и сроков разработки программы и документации на неё;
5)	выбор языков программирования;
6)	согласование и утверждение технического задания.

На этапе разработки программы должна быть выполнена работа по программированию и отладке программы.

На этапе разработки программной документации должна быть выполнена разработка программных документов в соответствии с требованиями ГОСТ 19.101-77 и требованием п. «Предварительный состав программной документации» настоящего технического задания.

На этапе испытаний программы должны быть выполнены перечисленные ниже виды работ:

1)	разработка, согласование и утверждение программы и методики испытаний;
2)	проведение приемо-сдаточных испытаний;
3)	корректировка программы и программной документации по результатам испытаний.

На этапе подготовки и передачи программы должна быть выполнена работа по подготовке программы и программной документации в эксплуатацию.




Исполнитель



Главный разработчик 				Баряев А.А.



ПОРЯДОК КОНТРОЛЯ И ПРИЕМКИ



Виды испытаний



Приемо-сдаточные испытания программы должны проводиться согласно разработанной и согласованной «Программы и методики испытаний».
Ход проведения приемо-сдаточных испытаний документируется в Протоколе проведения испытаний.


Общие требования к приемке работы



Прием программы будет утвержден при корректной работе программы в соответствии с пунктом 4.1.1. при различных входных данных, соответствующих условиям в пункте 4.1.2. данного документа.


